apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "backend.fullname" . }}
  labels:
    {{- include "backend.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- else }}
  replicas: 1
  {{- end }}
  selector:
    matchLabels:
      {{- include "backend.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "backend.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: ETHEREUM_NETWORK
              valueFrom:
                configMapKeyRef:
                  key: ethreum_network
                  name: {{ include "backend.fullname" . }}-config
            - name: MARKETPLACE_ADDRESS
              valueFrom:
                configMapKeyRef:
                  key: marketplace_address
                  name: {{ include "backend.fullname" . }}-config
            - name: MARKETPLACE_NFT_ADDRESS
              valueFrom:
                configMapKeyRef:
                  key: marketplace_nft_address
                  name: {{ include "backend.fullname" . }}-config
            - name: NETWORK_PROVIDER
              valueFrom:
                configMapKeyRef:
                  key: network_provider
                  name: {{ include "backend.fullname" . }}-config
            - name: ALCHEMY_HOST
              valueFrom:
                secretKeyRef:
                  key: host
                  name: {{ include "backend.fullname" . }}-alchemy-secret
            - name: ALCHEMY_API_KEY
              valueFrom:
                secretKeyRef:
                  key: api_key
                  name: {{ include "backend.fullname" . }}-alchemy-secret
            - name: KAS_API_ID
              valueFrom:
                secretKeyRef:
                  key: id
                  name: {{ include "backend.fullname" . }}-kas-secret
            - name: KAS_API_SECRET
              valueFrom:
                secretKeyRef:
                  key: secret
                  name: {{ include "backend.fullname" . }}-kas-secret
            - name: KAS_API_AUTH
              valueFrom:
                secretKeyRef:
                  key: auth
                  name: {{ include "backend.fullname" . }}-kas-secret
            - name: KAS_CHAIN_ID
              valueFrom:
                secretKeyRef:
                  key: chain_id
                  name: {{ include "backend.fullname" . }}-kas-secret
            - name: OPENSEA_API_KEY
              valueFrom:
                secretKeyRef:
                  key: api_key
                  name: {{ include "backend.fullname" . }}-opensea-secret
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  key: host
                  name: {{ include "backend.fullname" . }}-database-config
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  key: user
                  name: {{ include "backend.fullname" . }}-database-config
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: {{ include "backend.fullname" . }}-database-config
            - name: DB_DATABASE
              valueFrom:
                secretKeyRef:
                  key: database
                  name: {{ include "backend.fullname" . }}-database-config
            - name: DB_PORT
              valueFrom:
                secretKeyRef:
                  key: port
                  name: {{ include "backend.fullname" . }}-database-config
            - name: DB_ENGINE
              valueFrom:
                secretKeyRef:
                  key: engine
                  name: {{ include "backend.fullname" . }}-database-config
            - name: AWS_REGION
              valueFrom:
                secretKeyRef:
                  key: region
                  name: {{ include "backend.fullname" . }}-aws-credentials
            - name: AWS_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  key: access_key
                  name: {{ include "backend.fullname" . }}-aws-credentials
            - name: AWS_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  key: secret_key
                  name: {{ include "backend.fullname" . }}-aws-credentials
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
